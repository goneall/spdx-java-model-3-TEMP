/**
 * Copyright (c) 2024 Source Auditor Inc.
 *
 * SPDX-License-Identifier: Apache-2.0
 * 
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
 
package org.spdx.library.model.v3.core;

import org.spdx.library.IndividualUriValue;

/**
 * DO NOT EDIT - this file is generated by the Owl to Java Utility 
 * See: https://github.com/spdx/tools-java 
 * 
 * Provides information about the relationship between two Elements. For example, 
 * you can represent a relationship between two different Files, between a Package 
 * and a File, between two Packages, or between one SPDXDocument and another SPDXDocument. 
 */
public enum RelationshipType implements IndividualUriValue {

	DISTRIBUTION_ARTIFACT("distributionArtifact"),
	INVOKED_BY("invokedBy"),
	VARIANT("variant"),
	DOES_NOT_AFFECT("doesNotAffect"),
	TEST_TOOL("testTool"),
	FIXED_IN("fixedIn"),
	FILE_DELETED("fileDeleted"),
	COPY("copy"),
	OPTIONAL_DEPENDENCY("optionalDependency"),
	COORDINATED_BY("coordinatedBy"),
	INPUT_OF("inputOf"),
	OUTPUT_OF("outputOf"),
	SPECIFICATION_FOR("specificationFor"),
	DESCRIBES("describes"),
	AMENDS("amends"),
	EXPLOIT_CREATED_BY("exploitCreatedBy"),
	PATCH("patch"),
	REPORTED_BY("reportedBy"),
	DEPENDS_ON("dependsOn"),
	METAFILE("metafile"),
	DATA_FILE("dataFile"),
	GENERATES("generates"),
	EXPANDED_FROM_ARCHIVE("expandedFromArchive"),
	HAS_ASSOCIATED_VULNERABILITY("hasAssociatedVulnerability"),
	TRAINED_ON("trainedOn"),
	TESTED_ON("testedOn"),
	PUBLISHED_BY("publishedBy"),
	HOST_OF("hostOf"),
	AVAILABLE_FROM("availableFrom"),
	CONTAINS("contains"),
	DESCENDANT("descendant"),
	TEST_CASE("testCase"),
	CONCLUDED_LICENSE("concludedLicense"),
	PREREQUISITE("prerequisite"),
	REQUIREMENT_FOR("requirementFor"),
	OTHER("other"),
	ANCESTOR("ancestor"),
	FILE_MODIFIED("fileModified"),
	TEST_DEPENDENCY("testDependency"),
	DEV_DEPENDENCY("devDependency"),
	STATIC_LINK("staticLink"),
	DECLARED_LICENSE("declaredLicense"),
	AFFECTS("affects"),
	ON_BEHALF_OF("onBehalfOf"),
	EVIDENCE_FOR("evidenceFor"),
	FILE_ADDED("fileAdded"),
	PROVIDED_DEPENDENCY("providedDependency"),
	REPUBLISHED_BY("republishedBy"),
	HAS_ASSESSMENT_FOR("hasAssessmentFor"),
	DYNAMIC_LINK("dynamicLink"),
	DOCUMENTATION("documentation"),
	TEST("test"),
	RUNTIME_DEPENDENCY("runtimeDependency"),
	DEPENDENCY_MANIFEST("dependencyManifest"),
	FOUND_BY("foundBy"),
	UNDER_INVESTIGATION_FOR("underInvestigationFor"),
	PACKAGES("packages"),
	EXAMPLE("example"),
	OPTIONAL_COMPONENT("optionalComponent"),
	FIXED_BY("fixedBy"),
	CONFIG_OF("configOf"),
	BUILD_DEPENDENCY("buildDependency"),
	BUILD_TOOL("buildTool"),
	DEV_TOOL("devTool");
	
	private String longName;
	
	private RelationshipType(String longName) {
		this.longName = longName;
	}
	
	@Override
	public String getIndividualURI() {
		return getNameSpace() + "/" + getLongName();
	}
	
	public String getLongName() {
		return longName;
	}
	
	public String getNameSpace() {
		return "https://spdx.org/rdf/v3/Core/RelationshipType";
	}
}

