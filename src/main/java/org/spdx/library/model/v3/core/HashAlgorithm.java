/**
 * Copyright (c) 2024 Source Auditor Inc.
 *
 * SPDX-License-Identifier: Apache-2.0
 * 
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
 
package org.spdx.library.model.v3.core;

import org.spdx.library.IndividualUriValue;

/**
 * DO NOT EDIT - this file is generated by the Owl to Java Utility 
 * See: https://github.com/spdx/tools-java 
 * 
 * A HashAlgorithm is a mathematical algorithm that maps data of arbitrary size to a 
 * bit string (the hash) and is a one-way function, that is, a function which is practically 
 * infeasible to invert. 
 */
public enum HashAlgorithm implements IndividualUriValue {

	CRYSTALS_DILITHIUM("crystalsDilithium"),
	BLAKE2B256("blake2b256"),
	SHA3_224("sha3_224"),
	MD2("md2"),
	BLAKE2B512("blake2b512"),
	SPDX_PVC_SHA256("spdxPvcSha256"),
	OTHER("other"),
	SHA3_256("sha3_256"),
	SHA1("sha1"),
	SPDX_PVC_SHA1("spdxPvcSha1"),
	BLAKE2B384("blake2b384"),
	SHA3_512("sha3_512"),
	SHA224("sha224"),
	SHA3_384("sha3_384"),
	SHA256("sha256"),
	SHA384("sha384"),
	SPHINCS_PLUS("sphincsPlus"),
	CRYSTALS_KYBER("crystalsKyber"),
	BLAKE3("blake3"),
	MD6("md6"),
	FALCON("falcon"),
	MD5("md5"),
	SHA512("sha512"),
	MD4("md4");
	
	private String longName;
	
	private HashAlgorithm(String longName) {
		this.longName = longName;
	}
	
	@Override
	public String getIndividualURI() {
		return getNameSpace() + "/" + getLongName();
	}
	
	public String getLongName() {
		return longName;
	}
	
	public String getNameSpace() {
		return "https://spdx.org/rdf/v3/Core/HashAlgorithm";
	}
}

